export const privateKeysContent = {
  // Main page description - moved from main messages file
  description: "Приватні ключі є основою безпеки в технології блокчейн. Вони дозволяють користувачам доводити право власності та підписувати транзакції. Ця стаття пояснює, як генеруються приватні ключі та важливість випадковості у цьому процесі.",

  // Only keeping entropy sources and removing other sections
  entropySources: {
    title: "Джерела ентропії та CSPRNG",
    description: `Забезпечення криптостійкого рівня ентропії є передумовою формування надійного приватного ключа; відповідно до рекомендацій **RFC 4086** та **NIST SP 800-90B**, джерело випадковості повинно мати властивості непередбачуваності та стійкості до реконструкції попередніх і майбутніх вихідних даних. У випадку веб-середовища доцільно комбінувати рухи вказівника, таймінгові мікророзбіжності та шум WebRTC як первинний ентропійний пул, який після пост-обробки (наприклад, через криптографічну хеш-функцію SHA-256) ініціалізує детермінований CSPRNG – так досягається як висока швидкість, так і строгі гарантії випадковості.`,

    // Added links array to be rendered dynamically with Ukrainian text
    links: [
      {
        href: "https://tools.ietf.org/html/rfc4086",
        text: "RFC 4086: Вимоги до випадковості для безпеки"
      },
      {
        href: "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-90B.pdf",
        text: "NIST SP 800-90B: Рекомендації щодо ентропії"
      }
    ]
  },
  privateKeyGeneration: {
    title: "Способи генерації приватних ключів",
    fromCsprng: {
      title: "Генерація за допомогою криптографічно стійкого ГПВЧ",
      description: `Найпоширенішим та найбезпечнішим способом генерації приватних ключів є використання криптографічно стійкого генератора псевдовипадкових чисел (КСГПВЧ). Сучасні операційні системи та браузери надають вбудовані КСГПВЧ, які використовують різні джерела ентропії системи для отримання високоякісних випадкових чисел.

При використанні КСГПВЧ, згенеровані випадкові байти можуть бути використані безпосередньо як приватний ключ (якщо вони знаходяться у відповідному діапазоні) або бути оброблені через криптографічну хеш-функцію для забезпечення правильного форматування та розподілу.

Більшість криптовалютних гаманців та бібліотек використовують цей підхід для генерації приватних ключів, оскільки він поєднує безпеку з зручністю.`
    },
    fromEntropy: {
      title: "Генерація з ентропії",
      description: `Інший підхід до генерації приватних ключів полягає в зборі ентропії безпосередньо з дій користувача або джерел навколишнього середовища та її перетворенні в приватний ключ. Цей метод забезпечує прозорість та контроль користувача над джерелом випадковості.

Нижче наведено приклад генерації приватного ключа та адреси за допомогою ентропії, зібраної з рухів вашої миші. Переміщуйте мишу в межах поля нижче, доки не буде зібрано достатньо ентропії, потім натисніть кнопку для генерації ключа.

Зібрані байти ентропії відображаються, дозволяючи вам бачити точний випадковий вхід, використаний для створення вашого ключа. Цей підхід гарантує, що ключ згенеровано з ентропії, на яку ви безпосередньо вплинули.`,
      generateKeyButton: "Згенерувати ключ",
      generateKeyNotEnoughEntropy: "Недостатньо рухів мишею для ентропії, спробуйте ще раз.",
    },
    fromSeed: {
      title: "Генерація з мнемонічної фрази. BIP-39",
      description: `BIP-39 (Bitcoin Improvement Proposal 39) визначає механізм генерації мнемонічної фрази та подальше перетворення її на seed, який уже безпосередньо використовується для отримання приватних ключів. Його основні складові такі:`,
      
      mnemonicPhrase: {
        title: "1. Генерація мнемонічної фрази",
        description: `Мнемонічна фраза, згідно з BIP-39, складається з наперед визначеної кількості слів зі спеціального словника. Зазвичай використовується набір із 2048 слів, наявний у відкритому доступі (для англійської, японської, корейської й інших мов). Довжина фрази буває 12, 15, 18, 21 або 24 слова. Найпоширеніші формати — це 12 або 24 слова.

За допомогою криптографічно захищеного генератора випадкових чисел спочатку отримують початкову бітову послідовність entropy. Далі обчислюється хеш \`SHA-256(entropy)\` із якого беруть тільки перші \`entropy/32 біти\` (наприклад, для entropy довжиною 256 біт беруть 8 біт), що називаються контрольною сумою. Потім отриману контрольну суму додають (конкатенують) до вихідних випадкових бітів.

Після додавання контрольної суми загальна довжина бітів стає такою, що її зручно розбити на групи по 11 біт, що інтерпретуються як число від 0 до 2047 (тобто 211 = 2048 можливих значень). Це число є номером слова у відповідному BIP-32 словнику.

Завдяки такому механізму з одного боку отримуємо просту для читання й запису мнемоніку, а з іншого – маємо вбудовану перевірку правильності. Якщо користувач випадково переплутає одне зі слів або порядок слів, то контрольна сума не співпаде, і при перевірці мнемоніка розпізнається як некоректна.

Нижче наведено інтерактивний приклад, що демонструє процес генерації мнемоніки. Натисніть "Згенерувати", щоб створити нову мнемонічну фразу та побачити всі кроки.`,
        generateButtonText: "Згенерувати ентропію"
      },
      
      seedGeneration: {
        title: "2. Перетворення мнемонічної фрази на seed",
        description: `Після отримання послідовності слів (мнемоніки) виконується перехід до 512-бітного seed за допомогою функції PBKDF2-HMAC-SHA512. На вхід PBKDF2 передають: мнемонічну фразу (словосполучення), так звану «сіль» (salt), якою є рядок "mnemonic" (за BIP-39) та додаткове парольне слово (passphrase), якщо користувач обирає його. Отриманий у результаті 512-бітний seed і є тим головним секретом, із якого виконується подальше (детерміноване) виведення приватних ключів.

Нижче наведено інтерактивний приклад, що показує, як мнемонічна фраза перетворюється на seed, а потім на приватний ключ. Введіть власну мнемоніку або натисніть "Випадково", щоб згенерувати її.`,
        randomButtonText: "Випадково",
      },
      
      advantages: {
        title: "Переваги та безпечність мнемонік",
        description: `- Запам'ятати або зберігати мнемонічний ряд зі слів значно простіше, ніж громіздку бітову послідовність.
- Зі збереженого набору слів користувач у будь-який момент може знову отримати свій seed і відновити доступ до всіх відповідних приватних ключів.
- Додавання парольної фрази (passphrase) підвищує безпеку, оскільки робить зловмиснику складнішим завдання підібрати seed навіть за наявності базових 12 чи 24 слів.`
      },
      
      links: [
        {
          href: "https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki",
          text: "BIP-39: Мнемонічний код для генерації детермінованих ключів"
        },
        {
          href: "https://github.com/bitcoin/bips/blob/master/bip-0039/english.txt",
          text: "BIP-39 англійський словник (2048 слів)"
        }
      ]
    }
  }
};
